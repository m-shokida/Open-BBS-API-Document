openapi: "3.0.2"
info:
  title: Open BBS API
  version: "0.1"
servers:
  - url: https://api.server.test/v1
components:
  parameters:
    topicCategoryId:
      name: topic_category_id
      in: path
      description: トピックカテゴリID
      required: true
      schema:
        type: integer
    topicId:
      name: topic_id
      in: path
      description: トピックID
      required: true
      schema:
        type: string
        format: ulid
    Page:
      name: page
      in: query
      required: false
      description: 取得対象ページ
      schema:
        type: integer
        minimum: 0
  schemas:
    TopicCategory:
      type: object
      properties:
        id:
          type: integer
          description: カテゴリーID
        name:
          type: string
          description: カテゴリー名
    TopicCategories:
      type: array
      items:
        $ref: "#/components/schemas/TopicCategory"
    Topic:
      type: object
      properties:
        id:
          type: string
          format: ulid
          description: トピックID
        topic_category_id:
          type: integer
        title:
          type: string
          description: タイトル
          example: 初トピ投稿です。
        body:
          type: string
          description: 本文
          example: トピックを投稿しました。
        created_at:
          type: string
          format: date-time
          description: 作成日
    TopicComment:
      type: object
      properties:
        id:
          type: integer
          description: トピックコメントID
        topic_id:
          type: string
          format: ulid
          description: トピックID
        image_path:
          type: string
          format: url
          description: 画像URL
        created_at:
          type: string
          format: date-time
          description: 作成日
    Pagination:
      type: object
      properties:
        current_page:
          type: integer
        data:
          type: array
        first_page_url:
          type: string
        from:
          type: integer
        last_page:
          type: integer
        last_page_url:
          type: string
        links:
          type: array
        next_page_url:
          type: string
        path:
          type: string
        per_page:
          type: integer
        prev_page_url:
          type: string
        to:
          type: integer
        total:
          type: integer

paths:
  /api/topic-categories:
    get:
      summary: トピックカテゴリ一覧を取得する
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TopicCategories"
  /api/topics:
    post:
      summary: トピックを追加する
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                topic_category_id:
                  type: integer
                  description: カテゴリーID
                title:
                  type: string
                  maximum: 100
                  description: タイトル
                body:
                  type: string
                  maximum: 1000
                  description: 本文
                image:
                  type: string
                  format: binary
                  description: トピックイメージ画像
              required:
                - topic_category_id
                - title
                - body
      responses:
        "201":
          description: OK
  /api/topics/category/{topic_category_id}:
    get:
      summary: カテゴリ別トピックスを取得する
      description: カテゴリに紐づくトピックス一覧を取得する
      parameters:
        - $ref: "#/components/parameters/topicCategoryId"
        - $ref: "#/components/parameters/Page"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/Pagination"
                  - properties:
                      data:
                        items:
                          $ref: "#/components/schemas/Topic"
  /api/topics/week/{weeks_ago}:
    get:
      summary: 週間トピックスを取得する
      description: 週間トピックスを取得する
      parameters:
        - name: weeks_ago
          in: path
          required: true
          description: 取得対象週を～週間前形式で指定
          schema:
            type: integer
        - $ref: "#/components/parameters/Page"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/Pagination"
                  - properties:
                      data:
                        items:
                          $ref: "#/components/schemas/Topic"
  /api/topics/{topic_id}:
    get:
      summary: トピック詳細を取得する
      parameters:
        - $ref: "#/components/parameters/topicId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Topic"
  /api/topics/{topic_id}/comments (post):
    post:
      summary: コメントを追加する
      parameters:
        - $ref: "#/components/parameters/topicId"
      responses:
        "201":
          description: OK
  /api/topics/{topic_id}/comments (get):
    get:
      summary: コメント一覧を取得する
      description: トピックに紐づくコメント一覧を取得する
      parameters:
        - $ref: "#/components/parameters/topicId"
        - $ref: "#/components/parameters/Page"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/Pagination"
                  - properties:
                      data:
                        items:
                          $ref: "#/components/schemas/Topic"
